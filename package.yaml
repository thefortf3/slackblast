AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: slackblast-build-template
Globals:
  Function:
    Timeout: 10
    MemorySize: 128
    Tracing: Active
  Api:
    TracingEnabled: true
Parameters:
  SlackToken:
    Description: Slack token that is passed by the bot
    Type: String
    Default: '123'
  SlackSigningSecret:
    Description: Auth token used to pass to the controller to get the commands
    Type: String
    Default: '123'
  SlackClientSecret:
    Description: Auth token used to pass to the controller to get the commands
    Type: String
    Default: '123'
  SlackOauthScopes:
    Description: Auth token used to pass to the controller to get the commands
    Type: String
    Default: chat:write,chat:write.customize,chat:write.public,im:write,commands,team:read,users:read,channels:read
  Stage:
    Description: Parameter for getting the deployment stage
    Type: String
    Default: staging
  DatabaseHost:
    Description: RDS Database Host
    Type: String
    Default: '123'
  DatabaseUser:
    Description: RDS Database User
    Type: String
    Default: moneyball
  DatabasePassword:
    Description: RDS Database Password
    Type: String
    Default: '123'
  DatabaseSchema:
    Description: RDS Database Schema
    Type: String
    Default: slackblast
  PasswordEncryptKey:
    Description: Hash encrypt key for decrypting email passwords
    Type: String
    Default: '123'
  StravaClientID:
    Description: Strava Client ID
    Type: String
    Default: '123'
  StravaClientSecret:
    Description: Strava Client Secret
    Type: String
    Default: '123'
  WordpressAppPassword:
    Description: Wordpress App Password
    Type: String
    Default: '123'
  WordpressUser:
    Description: Wordpress User
    Type: String
    Default: '123'
  WordpressBaseUrl:
    Description: Wordpress Base URL
    Type: String
    Default: '123'
Mappings:
  StagesMap:
    staging:
      SlackClientID: '3135457248691.4852586913543'
      SlackStateS3Bucket: slack-state-bucket
      SlackInstallS3Bucket: slack-installation-bucket
      KeepWarmName: SlackblastKeepWarmTest
    prod:
      SlackClientID: '3135457248691.3241841713426'
      SlackStateS3Bucket: slack-state-bucket
      SlackInstallS3Bucket: slack-installation-bucket
      KeepWarmName: SlackblastKeepWarmProd
Resources:
  SlackblastFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: s3://slackblast/29008b7429e0a61239db766b91a76df4
      Handler: app.handler
      Runtime: python3.8
      Architectures:
      - x86_64
      Policies:
      - AmazonS3FullAccess
      - AWSLambdaRole
      - AmazonEventBridgeFullAccess
      Timeout: 400
      Events:
        Slackblast:
          Type: Api
          Properties:
            Path: /slack/events
            Method: post
        SlackblastInstall:
          Type: Api
          Properties:
            Path: /slack/install
            Method: get
        SlackblastKeepWarm:
          Type: ScheduleV2
          Properties:
            ScheduleExpression: rate(5 minutes)
            Name:
              Fn::FindInMap:
              - StagesMap
              - Ref: Stage
              - KeepWarmName
        StravaExchange:
          Type: Api
          Properties:
            Path: /exchange_token
            Method: get
      Environment:
        Variables:
          SLACK_BOT_TOKEN:
            Ref: SlackToken
          SLACK_SIGNING_SECRET:
            Ref: SlackSigningSecret
          ENV_SLACK_CLIENT_SECRET:
            Ref: SlackClientSecret
          ENV_SLACK_SCOPES:
            Ref: SlackOauthScopes
          DATABASE_HOST:
            Ref: DatabaseHost
          ADMIN_DATABASE_USER:
            Ref: DatabaseUser
          ADMIN_DATABASE_PASSWORD:
            Ref: DatabasePassword
          ADMIN_DATABASE_SCHEMA:
            Ref: DatabaseSchema
          PASSWORD_ENCRYPT_KEY:
            Ref: PasswordEncryptKey
          ENV_SLACK_CLIENT_ID:
            Fn::FindInMap:
            - StagesMap
            - Ref: Stage
            - SlackClientID
          ENV_SLACK_STATE_S3_BUCKET_NAME:
            Fn::FindInMap:
            - StagesMap
            - Ref: Stage
            - SlackStateS3Bucket
          ENV_SLACK_INSTALLATION_S3_BUCKET_NAME:
            Fn::FindInMap:
            - StagesMap
            - Ref: Stage
            - SlackInstallS3Bucket
          STRAVA_CLIENT_ID:
            Ref: StravaClientID
          STRAVA_CLIENT_SECRET:
            Ref: StravaClientSecret
          WORDPRESS_USER:
            Ref: WordpressUser
          WORDPRESS_APP_PASSWORD:
            Ref: WordpressAppPassword
          WORDPRESS_BASE_URL:
            Ref: WordpressBaseUrl
    Metadata:
      SamResourceId: SlackblastFunction
Outputs:
  SlackblastApi:
    Description: API Gateway endpoint URL for Prod stage for Slackblast function
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/slack/events/
  SlackblastFunction:
    Description: Slackblast Lambda Function ARN
    Value:
      Fn::GetAtt:
      - SlackblastFunction
      - Arn
  SlackblastFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value:
      Fn::GetAtt:
      - SlackblastFunctionRole
      - Arn
Metadata:
  AWS::ServerlessRepo::Application:
    Name: slackblaster
    Description: hello world
    Author: thefortf3
    SpdxLicenseId: Apache-2.0
    ReadmeUrl: s3://slackblast/c0e82f31fc9280c51a9e3baae0f3410b
    HomePageUrl: https://github.com/thefortf3/slackblaster
    SemanticVersion: '0.0.1'
    SourceCodeUrl: https://github.com/thefortf3/slackblaster
